name: 'CI/CD'
on:
  push:

jobs:
  ci:
    name: 'Continuous integration'
    runs-on: 'ubuntu-latest'
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          scope: '@kente-trial'
          registry-url: https://npm.pkg.github.com/
          always-auth: true

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Check format
        run: yarn run format:check

      - name: Check Linting
        run: yarn run lint

      - name: Build artifacts
        run: yarn run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: reactbuild-artifact
          path: ./build

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_FLOWER_032FA8E00 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action:
            'upload'
            ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
            # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: 'build' # App source code path
          api_location: '' # Api source code path - optional
          output_location:
            '' # Built app content directory - optional
            ###### End of Repository/Build Configurations ######

      - name: Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/release'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
        run: npx semantic-release@23

      - name: Merge Semantic Release changes from release Branch in main Branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/release'
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch
          git checkout release
          git pull
          git checkout main
          git merge release
          git push --force
